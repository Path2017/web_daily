
package com.e3expo.e3.middleware.mapper;

import com.e3expo.e3.model.User;
import com.e3expo.e3.model.form.UserInfoForm;

import java.util.List;
import java.util.Map;

import com.e3expo.e3.model.User;
import com.e3expo.e3.model.form.AdminUserParam;
import com.e3expo.e3.model.view.DesignerUserView;
import com.e3expo.e3.model.view.UserAuditDetailView;
import com.e3expo.e3.model.view.UserAuditView;
import com.e3expo.e3.model.view.UserView;

public interface UserMapper {
	
	
	public User queryUserInfoByMobile(String mobile);
	public int insertExhibitor(User user);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_user
     *
     * @mbggenerated Tue Nov 07 16:26:13 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_user
     *
     * @mbggenerated Tue Nov 07 16:26:13 CST 2017
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_user
     *
     * @mbggenerated Tue Nov 07 16:26:13 CST 2017
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_user
     *
     * @mbggenerated Tue Nov 07 16:26:13 CST 2017
     */
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_user
     *
     * @mbggenerated Tue Nov 07 16:26:13 CST 2017
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table te_user
     *
     * @mbggenerated Tue Nov 07 16:26:13 CST 2017
     */
    int updateByPrimaryKey(User record);

    /**
     * 查询所有工作年限的分割点
     *
     * @return
     */
    List<Integer> listDesignerWorkingYearsSplitPoint();
    /**
     * 管理员根据指定查询条件查询User的分页数据
     * @param userInfoForm
     * @return
     */
    List<UserView> selectPagedListByAdmin(AdminUserParam param);
    /**
     * 查询总条数
     * @param param
     * @return
     */
    Integer selectPagedTotalNumByAdmin(AdminUserParam param);
    /**
     * 获取设计师的详情，包括审核信息
     * @param map
     * @return
     */
    /**====================以上用户管理==============================*/
    /**====================以下用户审核==============================*/
    DesignerUserView getDesignerUserView(Map<String, Object> map);
    /**
     * 用户审核列表
     * @param param
     * @return
     */
    List<UserAuditView> selectAuditPagedListByAdmin(AdminUserParam param);
    /**
     * 用户审核列表的总数量
     * @param param
     * @return
     */
    Integer selectAuditPagedTotalNumByAdmin(AdminUserParam param);
    /**
     * 获取用户的审核详情
     * @param userAuditId
     * @return
     */
    UserAuditDetailView getUserAuditDetailView(Integer userAuditId);
}