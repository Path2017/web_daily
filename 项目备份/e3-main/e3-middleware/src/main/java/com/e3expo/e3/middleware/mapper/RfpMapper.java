package com.e3expo.e3.middleware.mapper;

import com.e3expo.e3.enumration.RfpStatusEnum;
import com.e3expo.e3.model.Rfp;
import com.e3expo.e3.model.param.PageParam;
import com.e3expo.e3.model.view.RfpView;

import com.e3expo.e3.model.view.WebAppRfpView;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Set;

public interface RfpMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table te_rfp
	 *
	 * @mbggenerated Tue Nov 07 16:26:13 CST 2017
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table te_rfp
	 *
	 * @mbggenerated Tue Nov 07 16:26:13 CST 2017
	 */
	int insert(Rfp record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table te_rfp
	 *
	 * @mbggenerated Tue Nov 07 16:26:13 CST 2017
	 */
	int insertSelective(Rfp record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table te_rfp
	 *
	 * @mbggenerated Tue Nov 07 16:26:13 CST 2017
	 */
	Rfp selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table te_rfp
	 *
	 * @mbggenerated Tue Nov 07 16:26:13 CST 2017
	 */
	int updateByPrimaryKeySelective(Rfp record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table te_rfp
	 *
	 * @mbggenerated Tue Nov 07 16:26:13 CST 2017
	 */
	int updateByPrimaryKey(Rfp record);

	/**
	 * 获取rfp详情
	 * 
	 * @param orderId
	 * @return
	 */
	RfpView getRfpAndDetail(Integer orderId);

	/**
	 * 根据id 查询rfp的草稿，
	 * @param rfpId
	 * @return
	 */
	WebAppRfpView getRfpDraftById(Integer rfpId);


	/**
	 * 分页查询代发布的Rfp
	 * @param page
	 * @param userId
	 * @param statusSet
	 * @return
	 */
	List<Rfp> pageQueryRfpByStatus(@Param("page") PageParam<Rfp> page,
								   @Param("userId") Integer userId,
								   @Param("statusSet") Set<Integer> statusSet);


	/**
	 * 查询所有保存的Rfp的总数
	 * @param userId
	 * @return
	 */
    int selectTotalSavedRfpCount(@Param("userId") Integer userId,
								 @Param("statusSet") Set<Integer> statusSet);
}