'use strict';
// 公共方法

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Utils = function () {
  function Utils() {
    _classCallCheck(this, Utils);

    this.countdown = 60;
    this.popups();
  }
  /*!
   * 获取验证码倒计时
   * @param {object} $el 显示倒计时的按钮
   */


  _createClass(Utils, [{
    key: 'settime',
    value: function settime($el) {
      var that = this;
      if (that.countdown === 0) {
        $el.prop('disabled', false).removeClass('getcode-active').addClass('getcode-normal').empty().prepend('获取验证码');
        that.countdown = 60;
      } else {
        $el.addClass('getcode-active').removeClass('getcode-normal').prop('disabled', true);
        var valValue = that.countdown + 's后重发';
        $el.empty().prepend(valValue);
        that.countdown--;
        setTimeout(function () {
          that.settime($el);
        }, 1000);
      }
    }
  }, {
    key: 'popups',
    value: function popups() {
      $('[data-toggle]').click(function () {
        var el = $(this).data('toggle');
        $(el).show();
        $(el).find('[data-close]').click(function () {
          $(el).hide();
        });
      });
    }
    /*!
     * 最简单弹框
     * @param {content} 内容
     * @param {title} 标题
     * @param {btnText} 按钮文字
     */

  }, {
    key: 'bomb',
    value: function bomb() {
      var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '参数错误';
      var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '提醒';
      var btnText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '知道了';

      var $el = $('<div class="bomb-wp">\n                    <div class="bomb-ct">\n                      <p class="title"><i></i>' + title + '</p>\n                      <p class="cue">' + content + '</p>\n                      <div class="knowbtn" data-close>' + btnText + '</div>\n                    </div>\n                  </div>');
      $el.appendTo('body').show();
      $el.find('[data-close]').click(function () {
        $el.remove();
      });
    }
    /*!
     * 上传图片格式验证
     * target 点击的input标签
     * maxSize 图片大小限制
     * callback 成功回调
     * zipimgsrc 压缩图片路径
     * distimg 显示图片
     * formatArr 上传图片格式
     */

  }, {
    key: 'filetype',
    value: function filetype(options, callback) {
      var target = options.target;
      var distimg = options.distimg;
      var zipimgsrc = options.zipimgsrc;
      var maxSize = options.maxSize ? options.maxSize : 50;
      var formatArr = options.format ? options.format : ['.PNG', '.PDF', '.JPG', '.JPEG'];
      // console.log(formatArr)
      var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
      var filepath = $(target).val();
      var extStart = filepath.lastIndexOf('.');
      var ext = filepath.substring(extStart, filepath.length).toUpperCase();
      var fileSize = 0;
      if (isIE && target.files.length > 0) {
        // IE浏览器
        var filePath = target.value; // 获得上传文件的绝对路径
        var fileSystem = new ActiveXObject('Scripting.FileSystemObject');
        var file = fileSystem.GetFile(filePath);
        fileSize = file.Size; // 文件大小，单位：b
      } else if (!isIE && target.files.length > 0) {
        // 非IE浏览器
        fileSize = target.files[0].size;
      } else {
        return false;
      }
      var size = fileSize / 1024 / 1024;
      console.log(ext);
      var data = {};
      if (formatArr.indexOf(ext) === -1) {
        $(target).val('');
        data.msg = '格式不对';
        callback(data.msg);
        console.log($(target).val());
        distimg.attr('src', '');
        $(target).siblings('.delete').hide();
        return false;
      } else if (size > maxSize) {
        $(target).val('');
        data.msg = '大小不对';
        callback(data.msg);
        $(target).siblings('.delete').hide();
        return false;
      } else if (ext === '.RAR' || ext === '.ZIP') {
        distimg.attr('src', zipimgsrc);
        callback('', target);
        return false;
      } else {
        var _file = target.files[0]; // 获取file对象单张
        var reader = new FileReader(); // 创建filereader对象
        reader.readAsDataURL(_file); // 转换数据
        reader.onload = function (e) {
          // 加载ok时触发的事件
          // url = e.target.result
          distimg.attr('src', e.target.result); // 给图片地址,显示缩略图
          distimg.css('display', 'inline-block'); // 样式显示
        };
        callback('', target);
      }
    }
    /*!
     * 创建上传图片框
     * wp 上传框容器
     * len 上窗框总数量
     */

  }, {
    key: 'createImgli',
    value: function createImgli(wp, len) {
      var str = '<li class="inputbox worksimg-li-must">' + '<span class="delete">×</span>' + '<span class="input-add">+</span>' + '<img src="" alt="">' + '<input type="file">' + '</li>';
      var num = $(wp).find('img').length;
      var imgArr = [];
      for (var i = 0; i < num; i++) {
        var li = $(wp).find('li').eq(i);
        var img = li.find('img');
        if (img.attr('src') !== '') {
          imgArr.push(1);
        }
      }
      // console.log($(wp).find('img').attr('src'))
      console.log(num);
      if (num < len && imgArr.length === num - 1) {
        $(wp).append(str);
      } else {
        return false;
      }
    }
    /*!
     * 取消订单
     * 发布需求后订单详情进度页
     * 取消订单
     */

  }, {
    key: 'cancelOrder',
    value: function cancelOrder() {
      $('#decancelbox').fadeIn();
    }
  }]);

  return Utils;
}();

/* eslint-disable */


var utils = new Utils();
/* eslint-enable */